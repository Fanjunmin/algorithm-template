线性DP
1. acwing898
数字三角形a[N][N]的最大路径
状态表示f[i, j]
集合定义: 所有从起点到(i, j)的路径
属性: 路径上的数字之和的最大值MAX
集合划分
分为两类：
(1). (i-1, j)->(i, j)
(2). (i-1, j-1)->(i, j)
f[i, j] = a[i][j] + t;
t   = f[i-1, j]                   i > 0
    = f[i-1, j-1]                 i > 0 && j > 0
    = max(f[i-1, j], f[i-1, j-1])
时间复杂度O(N^2)

2. acwing895
最长上升子序列S
长度为N的序列
状态表示f[i]
集合定义: 从起点到i(必须包含点i)的所有上升子序列
集合属性: 所有子序列的长度的最大值MAX
集合划分
分为j类:
S[j] < S[i] f[i] = 1 + f[j], j <= i
时间复杂度O(N^2)

3. acwing896
最长上升子序列S
长度为N的序列
状态表示f[i]
集合定义: 从起点到i(必须包含点i)的所有上升子序列
集合属性: 所有子序列的长度的最大值MAX
集合划分
分为j类:
S[j] < S[i] f[i] = 1 + f[j], j <= i
维护一个数组Q[N], Q[k]表示长度为k的上升子序列中的最小的末尾元素的值
对于元素S[i], 使用二分查找Q中第一个严格大于S[i]的元素Q[k]
那么f[i] = k+1, 更新Q[k+1]
时间复杂度O(NlogN)

3. acwing897
最长公共子序列A, B
状态表示F[i,j]
集合定义: A(0,i)与B(0, j)中所有的公共子序列
集合属性: 所有公共子序列中的最大长度
集合划分:
(1). A(0, i-1) B(0, j-1) -> (i, j) F[i,j]=max(F[i,j], 1+F[i-1, j-1]) A[i]==B[j]
(2). A(0, i) B(0, j-1)   -> (i, j) F[i,j]=max(F[i,j], F[i, j-1])
(3). A(0, i-1) B(0, j)   -> (i, j) F[i,j]=max(F[i,j], F[i-1, j])

4. acwing902
最短编辑距离
每个对字符串进行的单个字符的插入、删除或替换算作一次操作
求字符串A->B的距离dist(A, B)
状态表示F[i,j]
集合定义: A(0, i)与B(0, j)序列
集合属性: A(0, i)->B(0, j)的距离
集合划分:
(1). A(0, i-1) B(0, j-1) -> (i, j) F[i,j]=max(F[i,j], F[i-1, j-1]) A[i] == B[j]
(2). A(0, i) B(0, j-1)   -> (i, j) F[i,j]=min(F[i,j], 1+F[i, j-1])
(3). A(0, i-1) B(0, j)   -> (i, j) F[i,j]=min(F[i,j], 1+F[i-1, j])