随机数
1. Question 使用rand_x()函数实现rand_y()函数
1.1 问题分析
基于这样一个事实, (rand_x() - 1) * y + rand_y()可以生成rand_xy()函数
rand_x-1                        rand_y
            1           2           3           ...        y
------------------------------------------------------------------
    0       1           2           3           ...        y
------------------------------------------------------------------
    1       y+1         y+2         y+3         ...        2y
------------------------------------------------------------------
    2       2y+1        2y+2        2y+3        ...        3y
------------------------------------------------------------------
   ...
------------------------------------------------------------------
   x-1      (x-1)y+1    (x-1)y+2    (x-1)y+3    ...        xy
------------------------------------------------------------------

example: 使用rand7函数实现rand10
首先通过rand7可以实现rand49=(rand7-1)*7+rand7
另外, rand10可以通过10的倍数实现, 假如知道rand100, rand10=rand100%10+1
拒绝采样：
取rand49中小于等于40的部分, rand10=(rand49>=40)%10+1
代码如下：
while (1) {
    int x = (rand7() - 1) * 7  + rand7();   //rand 7 * 7 = 49
    if (x <= 40) return x % 10 + 1;
}

1.2 rand7函数调用期望
第一次有40/49的概率直接return, 有9/49的概率继续执行
第一次有1-(9/49)^2的概率直接return, 有(9/49)^2的概率继续执行
E = 2*(\sum_{i=0}^{+\inf}(9/49)^i)
  = 2*1/(1-9/49)=2.45

1.3 优化
当得到rand49时, 若x<=40, 则可以直接得到rand10, 否则相当于间接得到rand9
rand63 = (rand9-1)*7+rand7, 有可以判断x <= 60, 以此内推, 知道最后得到rand1
while (1) {
    int x = (rand7() - 1) * 7  + rand7();   //rand 7 * 7 = 49
    if (x <= 40) return x % 10 + 1;

    x = (x - 40 - 1) * 7 + rand7();     //rand 9 * 7 = 63
    if (x <= 60) return x % 10 + 1;

    x = (x - 60 - 1) * 7 + rand7();     //rand 3 * 7 = 21
    if (x <= 20) return x % 10 + 1;
}