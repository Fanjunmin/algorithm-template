哈希
哈希表的两种方法
1. 开放定址法
初始化数组h[N], 设置默认值null=0x3f3f3f3f
1.1 哈希函数(M = 10003)
k = f(x) = (x % M + M) % M 保证哈希值在[0, M)
1.2 冲突处理
如果 h[k] != null && h[k] != x
    k++; 还需要保证k在[0, M)
返回k

2. 开链法
使用一维链表h[N], e[N], ne[N], idx
初始化:
memst(h, -1, sizeof(h))
memst(e, 0, sizeof(e))
memst(ne, 0, sizeof(ne))
idx = 0;

1.1 哈希函数(M = 10003)
k = f(x) = (x % M + M) % M 保证哈希值在[0, M)
1.2 冲突处理
使用链表进行冲突处理
将x插入以h[k]为首节点的链表中
{ idx++; e[idx] = x; ne[idx] = k; h[k] = idx; }
1.3 查询操作
先计算hash函数 k = f(x)
然后遍历h[k]的所有节点